{"remainingRequest":"C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\src\\DBConnectionQuery\\certs\\DBLoginQuery.js","dependencies":[{"path":"C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\src\\DBConnectionQuery\\certs\\DBLoginQuery.js","mtime":1614523131030},{"path":"C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Dylon\\Documents\\Assesment\\Code\\job-portal\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwoKdmFyIGFzeW5jID0gcmVxdWlyZSgnYXN5bmMnKTsKCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7Cgp2YXIgcGcgPSByZXF1aXJlKCdwZycpOyAvLyBDb25uZWN0IHRvIHRoZSBkYXRhYmFzZS4KCgp2YXIgY29uZmlnID0gewogIHVzZXI6ICdkeWxvbicsCiAgaG9zdDogJ2xvY2FsaG9zdCcsCiAgZGF0YWJhc2U6ICdqb2JfcG9ydGFsJywKICBwb3J0OiAyNjI1NywKICBzc2w6IHsKICAgIGNhOiBmcy5yZWFkRmlsZVN5bmMoJ2NhLmNydCcpLnRvU3RyaW5nKCksCiAgICBrZXk6IGZzLnJlYWRGaWxlU3luYygnY2xpZW50LmR5bG9uLmtleScpLnRvU3RyaW5nKCksCiAgICBjZXJ0OiBmcy5yZWFkRmlsZVN5bmMoJ2NsaWVudC5keWxvbi5jcnQnKS50b1N0cmluZygpCiAgfQp9OyAvLyBDcmVhdGUgYSBwb29sLgoKdmFyIHBvb2wgPSBuZXcgcGcuUG9vbChjb25maWcpOwpwb29sLmNvbm5lY3QoZnVuY3Rpb24gKGVyciwgY2xpZW50LCBkb25lKSB7CiAgLy8gQ2xvc2UgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBkYXRhYmFzZSBhbmQgZXhpdC4KICB2YXIgZmluaXNoID0gZnVuY3Rpb24gZmluaXNoKCkgewogICAgZG9uZSgpOwogICAgcHJvY2Vzcy5leGl0KCk7CiAgfTsKCiAgaWYgKGVycikgewogICAgY29uc29sZS5lcnJvcignY291bGQgbm90IGNvbm5lY3QgdG8gY29ja3JvYWNoZGInLCBlcnIpOwogICAgZmluaXNoKCk7CiAgfQoKICBhc3luYy53YXRlcmZhbGwoW2Z1bmN0aW9uIChuZXh0KSB7CiAgICAvLyBDcmVhdGUgdGhlICdhY2NvdW50cycgdGFibGUuCiAgICBjbGllbnQucXVlcnkoJ1NFTEVDVCBpZCwgdXNlcl9uYW1lICxwYXNzd29yZCBGUk9NIGxvZ2luOycsIG5leHQpOwogIH1dLCBmdW5jdGlvbiAoZXJyLCByZXN1bHRzKSB7CiAgICBpZiAoZXJyKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluc2VydGluZyBpbnRvIGFuZCBzZWxlY3RpbmcgZnJvbSBsb2dpbjogJywgZXJyKTsKICAgICAgZmluaXNoKCk7CiAgICB9CgogICAgY29uc29sZS5sb2coJ0xvZ2luOiAnKTsKICAgIHJlc3VsdHMucm93cy5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgY29uc29sZS5sb2cocm93KTsKICAgIH0pOwogICAgZmluaXNoKCk7CiAgfSk7Cn0pOw=="},{"version":3,"sources":["C:/Users/Dylon/Documents/Assesment/Code/job-portal/src/DBConnectionQuery/certs/DBLoginQuery.js"],"names":["async","require","fs","pg","config","user","host","database","port","ssl","ca","readFileSync","toString","key","cert","pool","Pool","connect","err","client","done","finish","process","exit","console","error","waterfall","next","query","results","log","rows","forEach","row"],"mappings":";;;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB,C,CAEA;;;AACA,IAAIG,MAAM,GAAG;AACTC,EAAAA,IAAI,EAAE,OADG;AAETC,EAAAA,IAAI,EAAE,WAFG;AAGTC,EAAAA,QAAQ,EAAE,YAHD;AAITC,EAAAA,IAAI,EAAE,KAJG;AAKTC,EAAAA,GAAG,EAAE;AACDC,IAAAA,EAAE,EAAER,EAAE,CAACS,YAAH,CAAgB,QAAhB,EACCC,QADD,EADH;AAGDC,IAAAA,GAAG,EAAEX,EAAE,CAACS,YAAH,CAAgB,kBAAhB,EACAC,QADA,EAHJ;AAKDE,IAAAA,IAAI,EAAEZ,EAAE,CAACS,YAAH,CAAgB,kBAAhB,EACDC,QADC;AALL;AALI,CAAb,C,CAeA;;AACA,IAAIG,IAAI,GAAG,IAAIZ,EAAE,CAACa,IAAP,CAAYZ,MAAZ,CAAX;AAEAW,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,IAAvB,EAA6B;AAEtC;AACA,MAAIC,MAAM,GAAG,SAATA,MAAS,GAAY;AACrBD,IAAAA,IAAI;AACJE,IAAAA,OAAO,CAACC,IAAR;AACH,GAHD;;AAKA,MAAIL,GAAJ,EAAS;AACLM,IAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDP,GAAlD;AACAG,IAAAA,MAAM;AACT;;AACDrB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,CACR,UAAUC,IAAV,EAAgB;AACZ;AACAR,IAAAA,MAAM,CAACS,KAAP,CAAa,4CAAb,EAA2DD,IAA3D;AACH,GAJO,CAAhB,EAMI,UAAUT,GAAV,EAAeW,OAAf,EAAwB;AACpB,QAAIX,GAAJ,EAAS;AACLM,MAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd,EAAiEP,GAAjE;AACAG,MAAAA,MAAM;AACT;;AAEDG,IAAAA,OAAO,CAACM,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaC,OAAb,CAAqB,UAAUC,GAAV,EAAe;AAChCT,MAAAA,OAAO,CAACM,GAAR,CAAYG,GAAZ;AACH,KAFD;AAIAZ,IAAAA,MAAM;AACT,GAlBL;AAmBH,CA/BD","sourcesContent":["var async = require('async');\r\nvar fs = require('fs');\r\nvar pg = require('pg');\r\n\r\n// Connect to the database.\r\nvar config = {\r\n    user: 'dylon',\r\n    host: 'localhost',\r\n    database: 'job_portal',\r\n    port: 26257,\r\n    ssl: {\r\n        ca: fs.readFileSync('ca.crt')\r\n            .toString(),\r\n        key: fs.readFileSync('client.dylon.key')\r\n            .toString(),\r\n        cert: fs.readFileSync('client.dylon.crt')\r\n            .toString()\r\n    }\r\n};\r\n\r\n// Create a pool.\r\nvar pool = new pg.Pool(config);\r\n\r\npool.connect(function (err, client, done) {\r\n\r\n    // Close communication with the database and exit.\r\n    var finish = function () {\r\n        done();\r\n        process.exit();\r\n    };\r\n\r\n    if (err) {\r\n        console.error('could not connect to cockroachdb', err);\r\n        finish();\r\n    }\r\n    async.waterfall([\r\n            function (next) {\r\n                // Create the 'accounts' table.\r\n                client.query('SELECT id, user_name ,password FROM login;', next);\r\n            }\r\n        ],\r\n        function (err, results) {\r\n            if (err) {\r\n                console.error('Error inserting into and selecting from login: ', err);\r\n                finish();\r\n            }\r\n            \r\n            console.log('Login: ');\r\n            results.rows.forEach(function (row) {\r\n                console.log(row);\r\n            });\r\n\r\n            finish();\r\n        });\r\n});"]}]}